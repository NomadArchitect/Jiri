{
  "comments": [
    {
      "key": {
        "uuid": "f2123d8d_2908cb6f",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Since this is part of a package called \"cipd\", these names contain redundant information. Generally speaking, variables (exported or not) should not contain the name of the package in their name.\n\nThis comment applies to arguments to various functions below as well.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 60,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a7905f0_c85b5530",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "But for this special case, it might cause naming collisions if I stripped the \"cipd\" away. E.g. platform is used in func fetchCipdDigest(platform string). And it is used in tests so it is would be unwise to remove arguments from that function completely. If I rename the \"platform\" to \"plat\", well it works but does not look nice either. Is there a better solution?",
      "parentUuid": "f2123d8d_2908cb6f",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 60,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "579a5053_685b0be9",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-10T18:45:27Z",
      "side": 1,
      "message": "shorter, still meaningful variable names are encouraged, especially when they have a small scope. So it wouldn\u0027t really be odd to see something called \"platform\" as a package-scoped variable with functions taking something like \"p\" or \"plat\" as arguments.",
      "parentUuid": "3a7905f0_c85b5530",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 60,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57dacb86_229c0c87",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-10T19:55:37Z",
      "side": 1,
      "message": "I tried stripped \"cipd\" away but it causes naming collisions with package \"os\", \"jiri/version\". For this special case I would prefer to keep \"cipd\" prefix for now.",
      "parentUuid": "579a5053_685b0be9",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 60,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74a69324_886496d1",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Generally speaking, functions called `fooImpl` should be avoided in Go for a few reasons. First, Go\u0027s abstractions for OO are typically built around interfaces (rather than e.g. abstract classes) so a ClassImpl is not something one would really ever expect to see. Secondly, Go suggests names to be (or contain) verbs if they perform an action (hex.Encode), nouns if they exist to provide information (hex.Dumper), or some combination of the two if they perform an action to provide information, or perform an action on a specific thing (hex.DecodeString, hex.EncodeToString).\n\nI see that you\u0027ve broken out this functionality so that you can write unit tests without calling fetchCipdDigest. I\u0027d suggest naming this function along the lines of what it does. \"fetchBinary\" might be a good candidate.",
      "range": {
        "startLine": 86,
        "startChar": 5,
        "endLine": 86,
        "endChar": 18
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62606883_2b119fb5",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "To use \"Impl\" is just for the convenience of writing tests. I will avoid this naming in the future.",
      "parentUuid": "74a69324_886496d1",
      "range": {
        "startLine": 86,
        "startChar": 5,
        "endLine": 86,
        "endChar": 18
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7a76dd9_967cb3a2",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "I think this function should probably be defined inside Bootstrap (e.g. bootstrap :\u003d func() error { ... }) since it\u0027s not expected to be called elsewhere yet makes sense to be broken out.",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 115,
        "endChar": 1
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29887a6e_a3fd18d8",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7a76dd9_967cb3a2",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 115,
        "endChar": 1
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2edbe2dc_438e881e",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "is not",
      "range": {
        "startLine": 118,
        "startChar": 49,
        "endLine": 118,
        "endChar": 61
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c7ff4de_8e3d4d45",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2edbe2dc_438e881e",
      "range": {
        "startLine": 118,
        "startChar": 49,
        "endLine": 118,
        "endChar": 61
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08df7cd6_4376764f",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Could",
      "range": {
        "startLine": 123,
        "startChar": 5,
        "endLine": 123,
        "endChar": 10
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cadbc57f_4744c120",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08df7cd6_4376764f",
      "range": {
        "startLine": 123,
        "startChar": 5,
        "endLine": 123,
        "endChar": 10
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ed7c16b_6ce414eb",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "I think this may be my fault from suggestions in previous code reviews, but if Bootstrap is not expected to be called concurrently, then there\u0027s no reason to use sync/once here.",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 3
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d0c1546_946157c3",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "The Bootstrap() is not supposed to be called concurrently. The currently exposed functions in cipd is just Ensure, CheckACL, which are not expected (and shouldn\u0027t) be called concurrently. They both invoke Bootstrap() to ensure cipd is properly installed though. \n\nI just need a way to ensure the selfUpdate will be run no more than once during a single jiri session. As it will cause a slow HTTP request. Should I just use a global flag instead of the sync.Once? What is the best practice to do this in golang?",
      "parentUuid": "4ed7c16b_6ce414eb",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 3
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc69417f_0fb30237",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-10T18:45:27Z",
      "side": 1,
      "message": "Well, on the other hand, sync.Once will ensure the thing only happens once, while also ensuring it continues to work if it ever is called concurrently. This is probably fine!",
      "parentUuid": "9d0c1546_946157c3",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 3
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "056d6d92_b819a618",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "I don\u0027t think this needs to be its own function; it\u0027s not a big deal if it lives inside Bootstrap, which is its only caller.",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 32
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44c533bf_f299cf54",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-10T19:55:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "056d6d92_b819a618",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 32
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd89ed3b_a0703849",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "\"cipd binary path was not set\"",
      "range": {
        "startLine": 146,
        "startChar": 25,
        "endLine": 146,
        "endChar": 59
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1430ce58_bc50b321",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-10T19:55:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd89ed3b_a0703849",
      "range": {
        "startLine": 146,
        "startChar": 25,
        "endLine": 146,
        "endChar": 59
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8c54948_306836a5",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "As with the earlier comment on the package name appearing in variables, this function can just be called \"fetchDigest\"",
      "range": {
        "startLine": 162,
        "startChar": 5,
        "endLine": 162,
        "endChar": 20
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e056263_021118b3",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 162,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8c54948_306836a5",
      "range": {
        "startLine": 162,
        "startChar": 5,
        "endLine": 162,
        "endChar": 20
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a328ae0_1b9de1d7",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "I think this check could be if len(curline) \u003d\u003d 0 || curLine[0] \u003d\u003d \u0027#\u0027. If it was, then the later check of len(fields) \u003d\u003d 0 could be removed.",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 44
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee23ae1c_e0ffa38f",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a328ae0_1b9de1d7",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 44
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6271818b_7e240d01",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Let\u0027s call this \"writeFile\" or similar",
      "range": {
        "startLine": 196,
        "startChar": 5,
        "endLine": 196,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4c1b908_3db5ed4a",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6271818b_7e240d01",
      "range": {
        "startLine": 196,
        "startChar": 5,
        "endLine": 196,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dec9b1f_9458f636",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "\"Workaround to avoid import cycle\"\n\nWhat is the import cycle? A test package generally lives in the same package as the thing it\u0027s testing (and this one does), so it should be able to have all of the same imports.",
      "range": {
        "startLine": 260,
        "startChar": 4,
        "endLine": 260,
        "endChar": 36
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f8431f3_8c2546ef",
        "filename": "cipd/cipd.go",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "If I use NewFakeJiriRoot function from jiritest, will cause an import cycle. jiritest imports jiri/project; jiri/project imports jiri/cipd as it perform the call to cipd.Ensure. If I import jiritest to jiri/cipd, it will cause import cycles.\n\nI just need a Logger to print some debug logs and I saw loggers in jiri.X. But in tests there is no jiri.X. There is a jiritest.NewX to create a fake jiri.X but if I use it, it causes import cycles.",
      "parentUuid": "5dec9b1f_9458f636",
      "range": {
        "startLine": 260,
        "startChar": 4,
        "endLine": 260,
        "endChar": 36
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2107ee2e_20442a14",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "When do these change? Do we have to change the test when we make changes? Is there any chance that future repository moves / changes will change these strings such that the test needs to be updated? Mostly I just want to make sure that this test isn\u0027t going to start failing because someone else makes a change unrelated to this.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd08cfdb_be5826c6",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "They are digests generated at the time when I wrote jiri/cipd.go. They represents a published cipd release and it is stored in \"https://chrome-infra-packages.appspot.com\". It won\u0027t break unless someone delete this particular release. If there is a new cipd release, it will be totally fine, as we pin our tests on a specific cipd release.",
      "parentUuid": "2107ee2e_20442a14",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 48
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcc35e95_d15e4aab",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "might I suggest making this a couple of `map[string]string`s that maps a platform string to a digest? In doing this, you wouldn\u0027t need the retrieveDigest{A,B} functions.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 27,
        "endChar": 99
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bdd754b_0675856f",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcc35e95_d15e4aab",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 27,
        "endChar": 99
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a06dc190_17ba8930",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "I don\u0027t think this is a useful test and I would suggest removing it, but I would also point out that it can\u0027t fail since the platform variable will always be at least \"-\" based on the init function\u0027s behavior.\n\nInstead, the init() function should simply exit if the platform is invalid.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 62,
        "endChar": 1
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d892a56_ede8f957",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "I removed it.",
      "parentUuid": "a06dc190_17ba8930",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 62,
        "endChar": 1
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d148dd8_9add84fb",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Let\u0027s rename this since bootstrapCipdImpl is being renamed. I don\u0027t think \"ForAllPlatforms\" needs to be part of the name.",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 40
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f3c3bbd_5c31ba5b",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d148dd8_9add84fb",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 40
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "789cd613_61820c15",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "It is idiomatic for Go unit tests to be table-based tests, where each test is defined in a table, and all tests are executed. For example:\n\ntests :\u003d []struct{\n  platform string\n  version string\n  digest string\n}{\n  {\"linux-amd64\", versionA, digestLinuxAMD64A,},\n  {\"linux-arm64\", versionA, digestLinuxARM64A,},\n  ...\n}\n\nfor _, test :\u003d range tests {\n  // insert logic in testBootstrapImpl here, removing that function\n}",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 79,
        "endChar": 91
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acd03a72_3f5d6ead",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "789cd613_61820c15",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 79,
        "endChar": 91
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ae75daa_b4b8a498",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "It\u0027s worth a comment on tests that require network access, that that\u0027s required.",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 83,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "233f2cfa_25950dab",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ae75daa_b4b8a498",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 83,
        "endChar": 22
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebe0df6a_09f6e80c",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "It is rare to call Fatalf in a test. The usual use-case for doing this is if there are dependencies between tests. For example, if test N fails in the table, and some side-effect of running test N would also cause future tests to fail, this would be a reason to use t.Fatalf. This is the case in some of your other tests, where e.g. it doesn\u0027t make sense to test a digest if you couldn\u0027t retrieve it.\n\nInstead, consider using t.Errorf. The rationale here is that it is more useful to provide a developer with information about _all_ failing tests rather than just the first one. This is because it may be annoying to discover a failure, only to fix it and discover the very next test is failing as well.",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 10
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65346fb0_3f6134f5",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebe0df6a_09f6e80c",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 10
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237ccb52_b6b0a2eb",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "This test seems indirect. Let\u0027s use strings.HasPrefix(version, \"git_revision:\") for this test.",
      "range": {
        "startLine": 94,
        "startChar": 2,
        "endLine": 94,
        "endChar": 54
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feb1ea26_c12d947d",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "237ccb52_b6b0a2eb",
      "range": {
        "startLine": 94,
        "startChar": 2,
        "endLine": 94,
        "endChar": 54
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb19d736_50029c2a",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "I would suggest making this test a table-based test for all platforms as well.",
      "range": {
        "startLine": 103,
        "startChar": 5,
        "endLine": 103,
        "endChar": 24
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfe52646_706e352d",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb19d736_50029c2a",
      "range": {
        "startLine": 103,
        "startChar": 5,
        "endLine": 103,
        "endChar": 24
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b18a3cff_18c83a7c",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "spurious newline",
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a05a1b0_031f3130",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b18a3cff_18c83a7c",
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4e596aa_488b03f8",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "create",
      "range": {
        "startLine": 117,
        "startChar": 21,
        "endLine": 117,
        "endChar": 26
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d537c092_fe42e45a",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4e596aa_488b03f8",
      "range": {
        "startLine": 117,
        "startChar": 21,
        "endLine": 117,
        "endChar": 26
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "310d94d3_ca6d2cf5",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Let\u0027s use Fatalf here and add a prefix so it\u0027s clear what part of this test failed.",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 136,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "269aae05_4a764344",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "310d94d3_ca6d2cf5",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 136,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f7ec984_5f205478",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Let\u0027s use Fatalf here and add a prefix so it\u0027s clear what part of this test failed.",
      "range": {
        "startLine": 146,
        "startChar": 2,
        "endLine": 146,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ff40327_35578eeb",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f7ec984_5f205478",
      "range": {
        "startLine": 146,
        "startChar": 2,
        "endLine": 146,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8abce158_21a96211",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Let\u0027s use Fatalf here and add a prefix so it\u0027s clear what part of this test failed.",
      "range": {
        "startLine": 173,
        "startChar": 2,
        "endLine": 173,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22d06a74_ab9ec4e7",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8abce158_21a96211",
      "range": {
        "startLine": 173,
        "startChar": 2,
        "endLine": 173,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6c8fe38_45f74407",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 30867
      },
      "writtenOn": "2018-12-07T22:41:00Z",
      "side": 1,
      "message": "Let\u0027s use Fatalf here and add a prefix so it\u0027s clear what part of this test failed.",
      "range": {
        "startLine": 181,
        "startChar": 2,
        "endLine": 181,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2eb0cad_a7a5114b",
        "filename": "cipd/cipd_test.go",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 12756
      },
      "writtenOn": "2018-12-08T22:40:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b6c8fe38_45f74407",
      "range": {
        "startLine": 181,
        "startChar": 2,
        "endLine": 181,
        "endChar": 14
      },
      "revId": "3b8530d6d625d2979ca35dc2f8621355f30cd08d",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    }
  ]
}