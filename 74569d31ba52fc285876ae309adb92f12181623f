{
  "comments": [
    {
      "key": {
        "uuid": "90099178_3487b5ad",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 9195
      },
      "writtenOn": "2017-05-22T23:37:46Z",
      "side": 1,
      "message": "these things could race.",
      "range": {
        "startLine": 103,
        "startChar": 1,
        "endLine": 104,
        "endChar": 41
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56306d0a_ecb98131",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 5195
      },
      "writtenOn": "2017-05-23T00:01:35Z",
      "side": 1,
      "message": "hey what all code do you think can race? can you please give me the function names?",
      "parentUuid": "90099178_3487b5ad",
      "range": {
        "startLine": 103,
        "startChar": 1,
        "endLine": 104,
        "endChar": 41
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d3fbe96_ca918932",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 9195
      },
      "writtenOn": "2017-05-23T00:17:41Z",
      "side": 1,
      "message": "repaintProgressMsgs could be midway through operations when l.clearProgress is called, leading to corrupted terminal output.",
      "parentUuid": "56306d0a_ecb98131",
      "range": {
        "startLine": 103,
        "startChar": 1,
        "endLine": 104,
        "endChar": 41
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "058def5c_303b9a18",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 104,
      "author": {
        "id": 5195
      },
      "writtenOn": "2017-05-23T00:22:19Z",
      "side": 1,
      "message": "no we take lock in both the functions, so it cannot be",
      "parentUuid": "6d3fbe96_ca918932",
      "range": {
        "startLine": 103,
        "startChar": 1,
        "endLine": 104,
        "endChar": 41
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98ee55a8_f1428ba7",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 145,
      "author": {
        "id": 9195
      },
      "writtenOn": "2017-05-22T23:37:46Z",
      "side": 1,
      "message": "prefer keeping indentation (stack state) small.\n\nif e \u003d\u003d nil { continue }",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 145,
        "endChar": 16
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a3b0706_4899a328",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 145,
      "author": {
        "id": 5195
      },
      "writtenOn": "2017-05-23T00:01:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98ee55a8_f1428ba7",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 145,
        "endChar": 16
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ee52960_02b91015",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 9195
      },
      "writtenOn": "2017-05-22T23:37:46Z",
      "side": 1,
      "message": "just use an unconditional type assertion instead",
      "range": {
        "startLine": 156,
        "startChar": 5,
        "endLine": 159,
        "endChar": 4
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afad5654_772c2d60",
        "filename": "log/logger.go",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 5195
      },
      "writtenOn": "2017-05-23T00:01:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ee52960_02b91015",
      "range": {
        "startLine": 156,
        "startChar": 5,
        "endLine": 159,
        "endChar": 4
      },
      "revId": "74569d31ba52fc285876ae309adb92f12181623f",
      "serverId": "ccdefb6c-23ea-33ff-848c-339fc6ca2269",
      "unresolved": false
    }
  ]
}